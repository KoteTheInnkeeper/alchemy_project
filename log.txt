2021-02-02 07:59:48,381 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 07:59:48,382 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 07:59:48,382 DEBUG    [database_management.py:32] File didn't exist. A new one was created.
2021-02-02 07:59:48,382 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 07:59:48,398 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 07:59:50,811 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 07:59:50,812 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 08:01:33,948 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 08:01:33,949 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 08:01:33,949 DEBUG    [database_management.py:32] File didn't exist. A new one was created.
2021-02-02 08:01:33,949 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 08:01:33,965 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 08:01:35,248 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 08:01:35,248 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 08:41:21,619 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 08:41:21,619 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 08:41:21,619 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 08:41:21,620 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 08:41:21,620 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 08:41:24,248 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 08:41:24,248 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 08:41:24,253 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 08:41:25,333 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 08:41:52,804 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 08:41:52,805 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 08:41:52,805 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 08:41:52,806 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 08:41:52,806 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 08:41:56,166 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 08:41:56,167 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 08:41:56,186 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 08:41:57,291 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 08:44:27,189 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 08:44:27,189 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 08:44:27,189 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 08:44:27,189 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 08:44:27,190 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 08:44:28,990 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 08:44:28,990 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 08:44:28,994 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 08:44:30,122 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 08:44:47,397 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 08:44:47,398 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 08:44:47,398 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 08:44:47,398 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 08:44:47,399 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 08:44:50,232 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 08:44:50,233 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 08:44:50,253 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 08:44:51,343 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 08:50:34,076 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 08:50:34,077 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 08:50:34,077 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 08:50:34,077 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 08:50:34,078 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 08:50:36,599 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 08:50:36,599 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 08:50:36,618 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 08:50:37,708 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 08:50:47,430 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 08:50:47,431 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 08:50:47,431 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 08:50:47,431 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 08:50:47,432 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 08:50:48,699 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 08:50:48,699 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 08:50:48,720 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 08:50:49,865 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 08:54:05,607 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 08:54:05,607 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 08:54:05,607 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 08:54:05,608 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 08:54:05,608 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 08:54:06,308 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 08:54:06,309 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 08:54:06,330 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 08:54:07,424 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 08:55:49,816 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 08:55:49,817 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 08:55:49,817 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 08:55:49,817 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 08:55:49,817 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 08:55:51,290 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 08:55:51,291 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 08:55:51,308 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 08:55:52,447 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 08:56:12,944 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 08:56:12,945 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 08:56:12,945 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 08:56:12,945 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 08:56:12,946 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 08:56:14,140 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 08:56:14,141 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 08:56:14,162 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 08:56:15,219 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 08:58:01,166 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 08:58:01,166 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 08:58:01,166 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 08:58:01,167 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 08:58:01,167 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 08:58:01,771 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 08:58:01,772 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 08:58:01,790 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 08:58:02,912 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 09:03:52,343 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:03:52,343 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:03:52,344 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:03:52,344 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:03:52,345 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:03:53,210 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:03:53,210 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:03:53,231 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:03:54,343 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 09:06:01,763 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:06:01,763 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:06:01,763 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:06:01,764 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:06:01,764 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:06:02,695 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:06:02,695 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:06:02,715 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:06:03,879 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 09:07:59,262 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:07:59,262 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:07:59,262 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:07:59,263 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:07:59,263 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:08:00,148 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:08:00,148 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:08:00,165 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:08:01,383 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 09:08:34,965 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:08:34,966 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:08:34,966 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:08:34,967 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:08:34,967 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:08:36,609 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:08:36,610 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:08:36,630 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:08:37,707 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 09:08:54,853 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:08:54,854 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:08:54,854 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:08:54,854 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:08:54,855 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:08:56,098 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:08:56,099 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:08:56,117 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:08:57,202 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 09:11:25,789 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:11:25,790 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:11:25,790 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:11:25,791 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:11:25,791 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:11:26,286 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:11:26,288 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:11:26,309 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:11:27,354 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26554
2021-02-02 09:16:18,357 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:16:18,358 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:16:18,358 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:16:18,358 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:16:18,359 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:16:18,961 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:16:18,962 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:16:18,983 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:16:20,206 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:17:02,359 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:17:02,359 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:17:02,359 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:17:02,360 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:17:02,360 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:17:03,644 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:17:03,644 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:17:03,663 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:17:04,769 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:18:02,213 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:18:02,213 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:18:02,213 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:18:02,213 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:18:02,213 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:18:06,358 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:18:06,358 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:18:06,363 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:18:07,465 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:18:21,918 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:18:21,919 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:18:21,919 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:18:21,919 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:18:21,920 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:18:22,751 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:18:22,752 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:18:22,768 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:18:23,886 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:20:06,855 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:20:06,855 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:20:06,855 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:20:06,856 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:20:06,856 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:20:10,202 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:20:10,202 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:20:10,207 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:20:11,250 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:23:02,593 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:23:02,594 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:23:02,594 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:23:02,594 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:23:02,595 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:23:07,662 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:23:07,662 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:23:07,662 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:23:07,662 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:23:07,662 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:23:11,922 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:23:11,922 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:23:11,927 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:23:13,073 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:23:36,051 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:23:36,051 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:23:36,052 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:23:36,052 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:23:36,052 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:23:37,631 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:23:37,631 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:23:37,635 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:23:38,692 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:23:55,316 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:23:55,316 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:23:55,317 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:23:55,317 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:23:55,318 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:23:57,095 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:23:57,095 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:23:57,114 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:23:58,239 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:30:10,083 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:30:10,083 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:30:10,083 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:30:10,083 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:30:10,083 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:30:11,498 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:30:11,498 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:30:11,503 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:30:12,592 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:30:33,179 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:30:33,179 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:30:33,179 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:30:33,179 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:30:33,179 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:30:35,389 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:30:35,390 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:30:35,394 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:30:36,462 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:30:52,753 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:30:52,753 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:30:52,753 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:30:52,754 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:30:52,754 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:30:53,417 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:30:53,418 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:30:53,437 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:30:54,461 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:31:00,803 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:31:00,803 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:31:00,803 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:31:00,804 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:31:00,804 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:31:01,832 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:31:01,833 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:31:01,852 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:31:02,958 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:32:33,763 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:32:33,763 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:32:33,763 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:32:33,763 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:32:33,764 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:32:34,939 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:32:34,940 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:32:34,944 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:32:35,970 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:33:24,588 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:33:24,588 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:33:24,588 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:33:24,588 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:33:24,589 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:33:26,161 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:33:26,161 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:33:26,166 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:33:27,249 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:33:42,294 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:33:42,295 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:33:42,295 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:33:42,296 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:33:42,296 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:33:43,203 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:33:43,204 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:33:43,223 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:33:44,290 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:34:21,539 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:34:21,540 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:34:21,540 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:34:21,541 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:34:21,541 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:34:22,983 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:34:22,984 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:34:23,004 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:34:24,061 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 09:38:46,553 DEBUG    [database_management.py:23] Initializing database.
2021-02-02 09:38:46,554 DEBUG    [database_management.py:25] Checking if the .db file exists.
2021-02-02 09:38:46,554 DEBUG    [database_management.py:29] File exists. Checking for the table's content.
2021-02-02 09:38:46,554 DEBUG    [database_management.py:37] Creating tables if they don't exist.
2021-02-02 09:38:46,554 DEBUG    [database_management.py:42] Seeing if they're empty.
2021-02-02 09:38:47,902 DEBUG    [database_management.py:46] 'effects' table is empty. Populating it...
2021-02-02 09:38:47,902 DEBUG    [database_management.py:48] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 09:38:47,906 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 09:38:49,049 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 13:43:44,220 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 13:43:45,291 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 13:43:45,302 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-02 13:43:45,493 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92542
2021-02-02 13:43:45,574 DEBUG    [database_management.py:26] Initializing database.
2021-02-02 13:43:45,574 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-02 13:43:45,575 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-02 13:43:45,576 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-02 13:43:45,577 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-02 13:43:47,164 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-02 13:44:10,698 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 13:44:11,745 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 13:44:11,766 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-02 13:44:11,917 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92542
2021-02-02 13:44:11,995 DEBUG    [database_management.py:26] Initializing database.
2021-02-02 13:44:11,996 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-02 13:44:11,996 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-02 13:44:11,996 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-02 13:44:11,997 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-02 13:44:13,041 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-02 13:44:29,708 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 13:44:30,791 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 13:44:30,815 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-02 13:44:30,994 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92542
2021-02-02 13:44:31,074 DEBUG    [database_management.py:26] Initializing database.
2021-02-02 13:44:31,074 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-02 13:44:31,075 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-02 13:44:31,075 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-02 13:44:31,076 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-02 13:44:31,664 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-02 13:45:42,644 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 13:45:43,684 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 13:45:43,697 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-02 13:45:43,881 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92542
2021-02-02 13:45:43,962 DEBUG    [database_management.py:26] Initializing database.
2021-02-02 13:45:43,963 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-02 13:45:43,963 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-02 13:45:43,963 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-02 13:45:43,964 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-02 13:45:45,799 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-02 13:45:46,240 DEBUG    [database_management.py:51] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-02 13:49:00,130 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-02 13:49:01,289 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-02 13:49:01,304 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-02 13:49:01,497 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92542
2021-02-02 13:49:01,580 DEBUG    [database_management.py:26] Initializing database.
2021-02-02 13:49:01,581 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-02 13:49:01,581 DEBUG    [database_management.py:35] File didn't exist. A new one was created.
2021-02-02 13:49:01,581 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-02 13:49:01,595 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-02 13:49:02,841 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-02 13:49:03,270 DEBUG    [database_management.py:51] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-03 07:24:16,194 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:24:23,906 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:24:23,919 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:24:29,871 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:24:30,096 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:24:30,096 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:24:30,097 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:24:30,126 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:24:30,127 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:24:30,441 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:27:16,455 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:27:22,511 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:27:22,532 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:27:28,121 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:27:28,353 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:27:28,354 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:27:28,354 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:27:28,355 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:27:28,356 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:27:36,268 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:30:24,727 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:30:25,831 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:30:25,856 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:30:26,060 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:30:26,144 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:30:26,144 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:30:26,144 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:30:26,145 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:30:26,145 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:30:27,088 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:30:40,613 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:30:41,701 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:30:41,724 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:30:41,891 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:30:41,977 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:30:41,978 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:30:41,978 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:30:41,979 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:30:41,980 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:30:42,873 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:31:12,697 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:31:13,748 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:31:13,769 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:31:13,999 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:31:14,084 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:31:14,084 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:31:14,085 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:31:14,085 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:31:14,086 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:31:15,018 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:34:08,453 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:34:09,516 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:34:09,533 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:34:09,721 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:34:09,804 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:34:09,804 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:34:09,804 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:34:09,805 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:34:09,805 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:34:10,108 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:34:22,902 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:34:23,997 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:34:24,017 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:34:24,198 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:34:24,280 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:34:24,281 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:34:24,282 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:34:24,282 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:34:24,283 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:34:25,233 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:35:26,077 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:35:27,227 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:35:27,249 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:35:27,599 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:35:27,684 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:35:27,684 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:35:27,685 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:35:27,685 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:35:27,686 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:35:28,592 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:35:50,874 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:35:51,890 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:35:51,912 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:35:52,059 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:35:52,136 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:35:52,136 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:35:52,137 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:35:52,137 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:35:52,138 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:35:53,046 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:36:08,898 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:36:09,955 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:36:09,973 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:36:10,126 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:36:10,203 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:36:10,204 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:36:10,204 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:36:10,205 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:36:10,205 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:36:11,104 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:36:31,815 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:36:32,894 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:36:32,909 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:36:33,118 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:36:33,198 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:36:33,198 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:36:33,198 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:36:33,199 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:36:33,199 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:36:33,500 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:36:56,513 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:36:57,613 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:36:57,634 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:36:57,789 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:36:57,872 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:36:57,873 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:36:57,873 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:36:57,874 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:36:57,875 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:36:58,806 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:38:40,074 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:38:41,096 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:38:41,110 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:38:41,430 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:38:41,510 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:38:41,510 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:38:41,510 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:38:41,510 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:38:41,511 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:38:41,850 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:39:58,744 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:39:59,848 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:39:59,876 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:40:00,193 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:40:00,270 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:40:00,270 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:40:00,271 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:40:00,271 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:40:00,272 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:40:01,193 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:40:09,671 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:40:10,686 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:40:10,709 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:40:10,874 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:40:10,959 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:40:10,960 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:40:10,960 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:40:10,961 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:40:10,961 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:40:11,843 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:40:30,422 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:40:31,561 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:40:31,583 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:40:31,744 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:40:31,829 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:40:31,829 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:40:31,830 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:40:31,830 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:40:31,831 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:40:32,707 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:40:53,664 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:40:54,770 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:40:54,789 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:40:54,943 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:40:55,027 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:40:55,027 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:40:55,028 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:40:55,029 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:40:55,029 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:40:55,916 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:41:24,751 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:41:25,845 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:41:25,866 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:41:26,065 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:41:26,147 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:41:26,147 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:41:26,148 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:41:26,148 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:41:26,149 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:41:27,069 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:43:51,450 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:43:52,480 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:43:52,502 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:43:52,700 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:43:52,785 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:43:52,785 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:43:52,786 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:43:52,786 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:43:52,787 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:43:53,665 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:44:36,901 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:44:38,004 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:44:38,014 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:44:38,155 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:44:38,234 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:44:38,234 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:44:38,235 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:44:38,235 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:44:38,236 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:44:38,536 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:44:38,727 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:44:38,729 CRITICAL [database_management.py:57] A sqlite3.OperationalError was raised.
2021-02-03 07:49:30,570 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:49:31,691 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:49:31,704 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:49:32,043 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:49:32,122 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:49:32,123 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:49:32,123 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:49:32,123 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:49:32,123 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:49:32,428 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:49:32,621 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:49:32,622 CRITICAL [database_management.py:57] A sqlite3.OperationalError was raised.
2021-02-03 07:50:21,837 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:50:22,875 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:50:22,888 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:50:23,029 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:50:23,108 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:50:23,108 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:50:23,108 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:50:23,109 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:50:23,109 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:50:23,412 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:50:23,610 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:50:51,842 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:50:52,945 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:50:52,973 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:50:53,157 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:50:53,238 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:50:53,238 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:50:53,238 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:50:53,239 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:50:53,239 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:50:54,155 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:50:55,115 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:54:08,750 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:54:09,823 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:54:09,845 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:54:10,069 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:54:10,151 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:54:10,151 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:54:10,152 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:54:10,153 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:54:10,154 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:54:11,045 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:54:11,926 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:55:15,459 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:55:16,570 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:55:16,592 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:55:16,811 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:55:16,888 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:55:16,888 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:55:16,889 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:55:16,890 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:55:16,890 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:55:17,875 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:55:18,839 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:56:18,982 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:56:19,992 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:56:20,013 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:56:20,207 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:56:20,289 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:56:20,289 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:56:20,290 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:56:20,290 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:56:20,291 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:56:21,187 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:56:22,075 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:56:35,605 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:56:36,645 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:56:36,666 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:56:36,896 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:56:36,979 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:56:36,980 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:56:36,980 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:56:36,981 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:56:36,981 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:56:37,863 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:56:38,736 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:57:38,276 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 07:58:57,410 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:58:58,499 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:58:58,519 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:58:58,709 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:58:58,791 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:58:58,791 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:58:58,792 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:58:58,792 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:58:58,793 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:58:59,096 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:58:59,289 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:58:59,292 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 07:58:59,292 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:58:59,294 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 07:58:59,295 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:58:59,296 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 07:58:59,297 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:58:59,299 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 07:58:59,299 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:58:59,301 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 07:58:59,302 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:59:19,546 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 07:59:20,635 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 07:59:20,656 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 07:59:20,818 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 07:59:20,900 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 07:59:20,900 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 07:59:20,901 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 07:59:20,901 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 07:59:20,902 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 07:59:21,816 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 07:59:22,713 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 07:59:55,299 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 07:59:57,270 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:00:25,984 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:00:27,963 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:00:58,223 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 08:00:59,314 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 08:00:59,336 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 08:00:59,573 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 08:00:59,656 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 08:00:59,657 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 08:00:59,657 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 08:00:59,658 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 08:00:59,659 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 08:01:00,543 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 08:01:01,424 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:01:01,437 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:01:01,440 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:01:01,452 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:01:01,455 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:01:01,467 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:01:01,470 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:01:01,482 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:01:01,485 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:01:01,497 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:01:01,500 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:02:15,831 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 08:02:16,891 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 08:02:16,906 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 08:02:17,245 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 08:02:17,329 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 08:02:17,329 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 08:02:17,329 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 08:02:17,329 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 08:02:17,330 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 08:02:17,661 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 08:02:17,857 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:02:17,859 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:02:17,860 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:02:17,862 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:02:17,862 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:02:17,864 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:02:17,865 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:02:17,867 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:02:17,867 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:02:17,869 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:02:17,870 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:02:53,604 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 08:02:54,749 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 08:02:54,783 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 08:02:54,976 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 08:02:55,061 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 08:02:55,061 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 08:02:55,061 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 08:02:55,062 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 08:02:55,062 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 08:02:56,144 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 08:02:57,288 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:02:57,307 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:02:57,311 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:02:57,325 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:02:57,328 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:02:57,341 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:02:57,344 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:02:57,358 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:02:57,363 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:02:57,381 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:02:57,387 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:05:45,439 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 08:05:46,495 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 08:05:46,506 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 08:05:46,702 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 08:05:46,787 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 08:05:46,787 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 08:05:46,788 DEBUG    [database_management.py:35] File didn't exist. A new one was created.
2021-02-03 08:05:46,788 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 08:05:46,985 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 08:05:49,084 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-03 08:05:49,413 DEBUG    [database_management.py:67] Writing the list of effects to the 'effects' table in the database.
2021-02-03 08:05:49,660 DEBUG    [database_management.py:71] Database successfully populated with effects.
2021-02-03 08:05:49,660 DEBUG    [database_management.py:51] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-03 08:05:49,982 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 08:05:50,170 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:05:50,172 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:05:50,172 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:05:50,174 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:05:50,175 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:05:50,177 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:05:50,177 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:05:50,179 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:05:50,179 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:05:50,181 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:05:50,182 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:05:50,184 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:05:50,184 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:05:50,186 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:05:50,186 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:05:50,188 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:05:50,189 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:06:20,353 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 08:06:21,470 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 08:06:21,491 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 08:06:21,716 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 08:06:21,799 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 08:06:21,800 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 08:06:21,800 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 08:06:21,801 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 08:06:21,801 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 08:06:22,692 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 08:06:23,601 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:06:23,614 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:06:23,617 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:06:23,630 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:06:23,632 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:06:23,645 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:06:23,648 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:06:23,661 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:06:23,664 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:06:23,677 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:06:23,681 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:06:23,695 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:06:23,698 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:06:23,711 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:06:23,714 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:06:23,727 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:06:23,731 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:50,858 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 08:20:52,055 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 08:20:52,070 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 08:20:52,437 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 08:20:52,521 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 08:20:52,521 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 08:20:52,521 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 08:20:52,521 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 08:20:52,521 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 08:20:52,855 DEBUG    [database_management.py:84] Writing ingredients to 'ingredients' table in the database.
2021-02-03 08:20:53,057 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,060 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,060 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,062 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,063 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,065 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,065 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,067 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,068 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,069 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,070 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,072 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,072 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,074 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,075 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,076 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,077 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,080 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,080 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,082 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,082 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,084 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,084 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,086 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,086 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,088 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,088 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,090 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,090 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,092 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,093 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,095 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,095 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,097 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,097 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,099 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,100 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,101 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,102 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,104 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,104 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,106 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,106 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,108 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,108 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,110 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,111 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,113 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,113 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,115 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,115 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,117 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,117 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,119 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,119 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,121 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,122 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,123 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,124 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,125 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,126 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,128 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,128 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,130 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,131 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,133 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,134 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,136 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,136 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,138 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,138 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,140 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,141 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,143 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,143 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,145 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,145 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,147 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,148 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,149 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,150 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,152 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,152 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,154 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,154 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,156 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,156 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,158 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,158 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,161 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,161 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,163 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,163 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,165 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,166 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,168 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,168 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,170 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,170 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,172 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,172 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,174 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,175 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,176 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,177 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,179 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,179 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,181 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,181 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,183 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,183 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,185 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,185 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,187 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,188 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,190 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,190 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,192 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,192 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,194 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,195 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,197 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,197 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,199 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,199 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,201 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,201 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,203 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,203 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,205 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,206 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,207 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,208 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,210 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,210 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,212 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,213 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,215 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,215 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,217 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,217 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,219 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,219 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,221 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,221 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,223 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,223 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,225 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,225 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,227 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,228 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,230 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,230 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,232 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,232 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,234 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,235 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,237 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,237 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,239 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,239 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,241 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,241 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,243 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,243 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,245 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,246 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,248 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,248 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,250 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,250 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,252 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,253 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,254 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,255 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,256 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,257 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,259 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,259 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,261 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,261 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,263 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,264 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,266 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,266 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,268 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,268 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,270 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,271 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,272 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,273 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,274 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,275 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,277 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,277 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,279 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,280 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,281 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,282 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,283 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,284 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,285 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,286 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,288 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,288 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,290 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,290 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,292 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,292 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,294 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,295 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,297 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,297 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,299 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,299 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,301 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,301 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,303 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,303 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,305 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,306 DEBUG    [database_management.py:89] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:20:53,308 DEBUG    [database_management.py:94] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:20:53,308 DEBUG    [database_management.py:96] Database successfully populated with ingredients.
2021-02-03 08:23:58,524 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 08:23:59,572 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 08:23:59,583 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 08:23:59,941 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 08:24:00,028 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 08:24:00,028 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 08:24:00,029 DEBUG    [database_management.py:35] File didn't exist. A new one was created.
2021-02-03 08:24:00,030 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 08:24:00,231 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 08:24:01,858 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-03 08:24:02,204 DEBUG    [database_management.py:68] Writing the list of effects to the 'effects' table in the database.
2021-02-03 08:24:02,441 DEBUG    [database_management.py:72] Database successfully populated with effects.
2021-02-03 08:24:02,441 DEBUG    [database_management.py:51] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-03 08:24:02,775 DEBUG    [database_management.py:85] Writing ingredients to 'ingredients' table in the database.
2021-02-03 08:24:02,980 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:02,982 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:02,983 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:02,984 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:02,985 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:02,987 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:02,987 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:02,989 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:02,990 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:02,991 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:02,992 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:02,994 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:02,994 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:02,996 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:02,997 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:02,999 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:02,999 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,002 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,002 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,004 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,004 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,006 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,006 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,008 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,009 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,011 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,011 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,013 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,013 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,015 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,015 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,017 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,018 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,020 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,020 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,022 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,022 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,024 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,025 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,026 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,027 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,029 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,029 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,031 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,031 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,033 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,034 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,035 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,036 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,037 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,038 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,040 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,040 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,042 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,043 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,044 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,045 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,047 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,047 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,049 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,049 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,051 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,051 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,053 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,053 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,056 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,057 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,059 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,059 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,061 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,061 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,063 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,064 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,066 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,066 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,068 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,068 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,070 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,070 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,072 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,073 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,075 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,075 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,077 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,077 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,079 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,079 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,081 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,082 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,084 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,084 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,086 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,087 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,089 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,090 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,092 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,092 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,094 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,094 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,096 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,096 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,098 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,099 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,100 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,101 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,102 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,103 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,105 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,105 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,108 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,109 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,111 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,112 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,114 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,114 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,116 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,116 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,118 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,119 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,120 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,121 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,123 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,123 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,125 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,125 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,127 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,128 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,130 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,130 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,132 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,132 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,134 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,134 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,136 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,137 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,139 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,139 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,141 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,141 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,143 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,143 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,145 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,146 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,147 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,148 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,150 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,150 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,152 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,152 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,154 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,154 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,157 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,158 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,159 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,160 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,162 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,162 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,164 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,165 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,166 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,167 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,168 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,169 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,171 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,171 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,174 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,174 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,176 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,176 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,178 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,179 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,181 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,181 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,183 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,184 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,187 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,188 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,191 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,192 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,194 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,195 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,196 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,197 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,199 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,199 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,201 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,201 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,203 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,204 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,206 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,206 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,208 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,208 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,211 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,211 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,213 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,213 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,215 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,215 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,217 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,217 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,219 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,220 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,222 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,222 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,224 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,224 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,226 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,227 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,228 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,229 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,231 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,231 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,233 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,234 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,235 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,236 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,237 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,238 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,240 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,240 DEBUG    [database_management.py:90] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 08:24:03,242 DEBUG    [database_management.py:95] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 08:24:03,242 DEBUG    [database_management.py:97] Database successfully populated with ingredients.
2021-02-03 08:25:38,775 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 08:25:39,805 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26874
2021-02-03 08:25:39,820 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 08:25:40,020 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 08:25:40,105 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 08:25:40,106 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 08:25:40,106 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 08:25:40,107 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 08:25:40,108 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 15:09:45,373 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 15:09:46,388 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26552
2021-02-03 15:09:46,401 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 15:09:46,602 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 15:09:46,687 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 15:09:46,688 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 15:09:46,688 DEBUG    [database_management.py:35] File didn't exist. A new one was created.
2021-02-03 15:09:46,688 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 15:09:46,701 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 15:09:51,536 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-03 15:09:51,829 DEBUG    [database_management.py:70] Writing the list of effects to the 'effects' table in the database.
2021-02-03 15:09:51,977 DEBUG    [database_management.py:74] Database successfully populated with effects.
2021-02-03 15:09:51,977 DEBUG    [database_management.py:51] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-03 15:09:52,275 DEBUG    [database_management.py:87] Writing ingredients to 'ingredients' table in the database.
2021-02-03 15:10:11,798 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 15:10:12,969 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26552
2021-02-03 15:10:12,984 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 15:10:13,168 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 15:10:13,252 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 15:10:13,252 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 15:10:13,252 DEBUG    [database_management.py:32] File exists. Checking for the table's content.
2021-02-03 15:10:13,253 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 15:10:13,253 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 15:10:16,216 DEBUG    [database_management.py:87] Writing ingredients to 'ingredients' table in the database.
2021-02-03 15:10:16,388 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,391 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,392 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,393 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,394 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,395 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,396 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,398 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,398 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,400 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,400 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,402 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,403 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,404 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,405 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,407 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,407 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,409 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,410 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,411 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,412 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,414 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,414 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,416 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,416 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,418 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,418 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,420 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,421 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,422 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,423 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,424 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,425 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,427 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,427 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,429 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,429 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,431 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,431 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,433 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,433 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,435 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,435 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,437 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,437 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,439 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,440 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,441 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,442 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,443 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,444 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,446 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,446 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,448 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,448 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,450 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,450 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,452 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,452 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,454 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,454 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,456 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,456 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,458 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,458 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,460 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,460 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,462 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,463 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,465 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,465 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,467 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,467 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,469 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,469 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,471 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,472 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,473 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,474 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,475 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,476 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,477 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,478 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,479 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,480 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,481 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,482 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,483 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,484 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,486 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,486 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,488 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,488 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,490 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,490 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,492 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,492 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,494 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,494 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,496 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,496 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,498 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,498 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,500 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,500 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,502 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,502 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,504 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,504 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,506 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,506 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,508 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,508 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,510 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,510 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,512 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,512 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,514 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,515 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,516 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,517 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,518 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,519 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,520 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,521 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,522 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,523 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,524 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,525 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,526 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,527 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,529 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,529 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,531 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,531 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,532 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,533 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,535 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,535 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,537 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,537 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,539 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,539 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,541 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,542 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,543 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,544 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,545 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,546 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,547 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,548 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,550 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,550 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,552 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,552 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,554 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,554 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,556 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,556 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,558 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,558 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,560 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,560 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,562 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,562 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,564 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,564 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,566 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,566 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,568 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,569 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,571 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,571 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,573 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,573 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,575 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,575 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,577 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,577 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,579 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,579 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,581 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,581 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,583 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,584 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,585 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,586 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,587 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,588 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,589 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,590 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,592 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,592 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,594 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,594 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,596 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,596 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,598 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,598 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,600 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,600 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,602 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,602 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,604 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,604 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,606 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,606 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,608 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,608 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,610 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,610 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,612 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,613 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,614 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,615 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,616 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,617 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,618 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,619 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,620 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,621 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:10:16,623 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:10:16,623 DEBUG    [database_management.py:99] Database successfully populated with ingredients.
2021-02-03 15:10:16,628 DEBUG    [database_management.py:60] Database successfully initialized.
2021-02-03 15:11:34,359 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 15:11:35,377 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26552
2021-02-03 15:11:35,390 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 15:11:35,574 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 15:11:35,655 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 15:11:35,655 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 15:11:35,656 DEBUG    [database_management.py:35] File didn't exist. A new one was created.
2021-02-03 15:11:35,656 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 15:11:35,670 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 15:11:38,270 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-03 15:11:38,574 DEBUG    [database_management.py:70] Writing the list of effects to the 'effects' table in the database.
2021-02-03 15:11:38,727 DEBUG    [database_management.py:74] Database successfully populated with effects.
2021-02-03 15:11:38,727 DEBUG    [database_management.py:51] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-03 15:11:39,020 DEBUG    [database_management.py:87] Writing ingredients to 'ingredients' table in the database.
2021-02-03 15:11:39,202 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,205 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,205 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,207 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,207 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,209 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,210 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,211 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,212 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,213 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,214 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,216 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,216 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,218 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,218 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,220 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,221 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,223 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,223 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,225 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,225 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,227 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,227 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,229 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,229 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,231 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,231 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,233 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,233 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,235 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,236 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,237 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,238 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,240 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,240 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,242 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,242 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,244 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,244 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,246 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,246 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,248 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,249 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,250 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,251 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,253 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,253 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,255 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,256 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,257 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,258 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,259 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,260 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,261 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,262 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,264 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,264 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,266 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,266 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,268 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,268 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,270 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,270 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,272 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,272 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,274 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,275 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,277 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,277 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,279 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,279 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,281 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,281 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,283 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,284 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,285 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,286 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,287 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,288 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,289 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,290 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,292 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,292 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,294 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,294 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,296 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,296 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,298 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,298 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,300 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,301 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,303 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,303 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,305 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,305 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,307 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,307 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,309 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,309 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,311 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,312 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,314 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,314 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,316 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,316 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,318 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,318 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,320 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,320 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,322 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,322 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,324 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,324 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,326 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,326 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,328 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,329 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,331 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,331 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,333 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,333 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,335 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,335 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,337 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,337 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,339 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,339 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,341 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,342 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,343 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,344 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,345 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,346 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,348 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,348 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,350 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,350 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,352 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,352 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,354 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,354 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,356 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,356 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,358 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,358 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,360 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,360 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,362 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,362 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,364 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,365 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,367 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,367 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,369 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,369 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,371 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,372 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,373 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,374 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,376 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,376 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,378 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,378 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,380 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,380 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,382 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,382 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,384 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,384 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,386 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,387 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,388 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,389 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,390 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,391 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,393 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,393 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,395 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,395 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,397 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,397 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,399 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,399 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,401 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,401 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,403 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,404 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,405 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,406 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,408 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,408 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,410 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,410 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,412 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,413 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,415 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,415 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,417 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,417 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,419 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,420 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,422 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,422 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,424 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,425 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,426 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,427 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,429 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,429 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,430 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,431 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,433 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,433 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,435 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,435 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,437 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,437 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,439 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,439 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,441 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,441 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:11:39,443 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:11:39,443 DEBUG    [database_management.py:99] Database successfully populated with ingredients.
2021-02-03 15:11:39,449 DEBUG    [database_management.py:60] Database successfully initialized.
2021-02-03 15:14:15,969 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 15:14:17,086 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26552
2021-02-03 15:14:17,099 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 15:14:17,302 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 15:14:17,387 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 15:14:17,388 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 15:14:17,388 DEBUG    [database_management.py:35] File didn't exist. A new one was created.
2021-02-03 15:14:17,388 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 15:14:17,402 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 15:14:18,069 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-03 15:14:18,360 DEBUG    [database_management.py:70] Writing the list of effects to the 'effects' table in the database.
2021-02-03 15:14:18,511 DEBUG    [database_management.py:74] Database successfully populated with effects.
2021-02-03 15:14:18,512 DEBUG    [database_management.py:51] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-03 15:14:18,803 DEBUG    [database_management.py:87] Writing ingredients to 'ingredients' table in the database.
2021-02-03 15:14:18,981 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:14:18,983 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:14:18,984 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:14:18,986 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:14:18,986 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:14:18,988 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:14:18,989 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:14:18,991 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:14:18,991 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:14:18,993 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:14:18,994 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:14:18,996 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:14:18,997 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:14:18,999 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:14:18,999 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:14:19,001 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:14:19,001 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:15:57,744 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 15:15:58,809 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26552
2021-02-03 15:15:58,823 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 15:15:59,008 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 15:15:59,088 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 15:15:59,089 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 15:15:59,089 DEBUG    [database_management.py:35] File didn't exist. A new one was created.
2021-02-03 15:15:59,089 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 15:15:59,102 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 15:16:00,680 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-03 15:16:00,967 DEBUG    [database_management.py:70] Writing the list of effects to the 'effects' table in the database.
2021-02-03 15:16:01,111 DEBUG    [database_management.py:74] Database successfully populated with effects.
2021-02-03 15:16:01,112 DEBUG    [database_management.py:51] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-03 15:16:01,410 DEBUG    [database_management.py:87] Writing ingredients to 'ingredients' table in the database.
2021-02-03 15:16:01,587 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,590 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,590 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,593 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,593 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,595 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,595 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,597 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,597 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,599 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,600 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,602 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,602 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,604 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,604 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,606 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,607 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,609 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,610 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,612 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,612 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,614 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,614 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,616 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,616 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,618 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,618 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,620 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,621 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,622 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,623 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,625 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,625 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,627 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,627 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,629 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,629 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,631 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,632 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,633 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,634 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,635 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,636 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,637 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,638 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,640 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,640 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,642 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,642 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,644 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,645 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,646 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,647 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,648 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,649 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,651 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,651 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,653 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,653 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,655 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,655 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,657 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,658 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,660 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,660 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,662 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,662 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,665 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,665 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,667 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,667 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,669 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,669 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,671 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,671 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,673 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,673 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,675 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,675 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,677 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,677 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,679 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,680 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,681 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,681 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,683 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,684 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,685 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,686 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,687 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,688 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,690 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,690 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,692 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,692 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,694 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,694 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,696 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,696 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,698 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,699 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,700 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,701 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,702 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,702 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,704 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,705 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,706 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,707 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,708 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,709 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,711 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,711 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,713 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,713 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,715 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,716 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,717 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,718 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,719 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,720 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,721 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,722 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,723 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,724 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,725 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,726 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,728 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,728 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,730 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,730 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,732 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,732 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,734 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,734 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,736 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,736 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,738 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,738 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,740 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,740 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,742 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,743 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,744 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,745 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,746 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,747 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,748 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,749 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,750 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,751 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,753 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,753 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,755 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,755 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,757 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,757 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,759 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,760 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,761 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,762 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,763 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,764 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,765 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,766 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,767 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,768 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,770 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,770 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,772 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,772 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,774 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,774 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,777 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,777 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,779 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,779 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,781 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,781 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,783 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,783 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,785 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,785 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,787 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,787 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,789 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,789 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,791 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,792 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,793 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,794 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,795 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,796 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,797 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,798 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,802 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,802 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,804 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,804 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,806 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,807 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,808 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,809 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,811 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,812 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,814 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,814 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,816 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,816 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,818 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,818 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,820 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,821 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,822 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,823 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,824 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,825 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,826 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,827 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,829 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,829 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:16:01,831 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:16:01,831 DEBUG    [database_management.py:99] Database successfully populated with ingredients.
2021-02-03 15:16:01,837 DEBUG    [database_management.py:60] Database successfully initialized.
2021-02-03 15:19:38,389 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 15:19:39,733 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26552
2021-02-03 15:19:39,752 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 15:19:40,121 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 15:19:40,300 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 15:19:40,300 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 15:19:40,300 DEBUG    [database_management.py:35] File didn't exist. A new one was created.
2021-02-03 15:19:40,301 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 15:19:40,313 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 15:19:42,176 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-03 15:19:42,459 DEBUG    [database_management.py:70] Writing the list of effects to the 'effects' table in the database.
2021-02-03 15:19:42,601 DEBUG    [database_management.py:74] Database successfully populated with effects.
2021-02-03 15:19:42,601 DEBUG    [database_management.py:51] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-03 15:19:42,894 DEBUG    [database_management.py:87] Writing ingredients to 'ingredients' table in the database.
2021-02-03 15:19:43,064 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,066 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,067 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,068 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,069 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,071 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,071 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,073 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,073 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,075 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,075 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,077 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,078 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,079 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,080 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,082 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,082 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,084 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,085 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,086 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,087 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,088 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,089 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,090 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,091 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,092 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,093 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,094 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,095 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,097 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,097 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,099 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,099 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,101 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,101 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,103 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,103 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,105 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,105 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,107 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,107 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,109 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,109 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,111 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,111 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,113 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,114 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,115 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,116 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,117 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,118 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,119 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,120 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,121 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,122 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,123 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,124 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,125 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,126 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,127 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,128 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,129 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,130 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,131 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,132 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,133 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,134 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,136 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,136 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,138 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,138 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,140 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,140 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,142 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,143 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,144 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,145 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,146 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,147 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,148 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,149 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,151 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,151 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,153 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,153 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,155 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,155 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,157 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,157 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,159 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,159 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,161 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,162 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,163 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,164 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,165 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,166 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,168 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,168 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,170 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,170 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,172 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,172 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,174 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,174 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,176 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,176 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,178 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,178 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,180 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,180 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,182 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,182 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,185 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,185 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,187 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,187 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,189 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,189 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,191 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,191 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,193 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,194 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,196 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,196 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,198 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,199 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,201 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,202 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,204 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,204 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,207 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,207 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,209 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,209 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,211 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,211 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,213 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,213 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,215 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,216 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,217 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,218 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,219 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,219 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,221 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,221 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,223 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,223 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,225 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,225 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,227 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,228 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,230 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,230 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,232 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,232 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,234 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,234 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,236 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,236 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,238 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,238 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,240 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,240 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,242 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,242 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,244 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,245 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,246 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,247 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,248 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,249 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,250 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,251 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,253 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,253 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,255 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,255 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,257 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,257 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,259 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,259 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,261 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,261 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,263 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,263 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,265 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,266 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,267 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,268 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,270 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,271 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,273 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,273 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,275 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,276 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,277 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,278 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,280 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,280 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,282 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,283 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,285 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,285 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,287 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,287 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,289 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,289 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,291 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,292 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,293 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,294 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,296 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,296 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,298 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,298 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,300 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,300 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,302 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:19:43,303 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:19:43,305 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:29,539 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): en.uesp.net:443
2021-02-03 15:20:30,597 DEBUG    [connectionpool.py:452] https://en.uesp.net:443 "GET /wiki/Skyrim:Alchemy_Effects HTTP/1.1" 200 26552
2021-02-03 15:20:30,610 DEBUG    [connectionpool.py:971] Starting new HTTPS connection (1): elderscrolls.fandom.com:443
2021-02-03 15:20:30,820 DEBUG    [connectionpool.py:452] https://elderscrolls.fandom.com:443 "GET /wiki/Ingredients_(Skyrim) HTTP/1.1" 200 92563
2021-02-03 15:20:30,898 DEBUG    [database_management.py:26] Initializing database.
2021-02-03 15:20:30,898 DEBUG    [database_management.py:28] Checking if the .db file exists.
2021-02-03 15:20:30,898 DEBUG    [database_management.py:35] File didn't exist. A new one was created.
2021-02-03 15:20:30,899 DEBUG    [database_management.py:40] Creating tables if they don't exist.
2021-02-03 15:20:30,914 DEBUG    [database_management.py:45] Seeing if they're empty.
2021-02-03 15:20:44,791 DEBUG    [database_management.py:49] 'effects' table is empty. Populating it...
2021-02-03 15:20:45,078 DEBUG    [database_management.py:70] Writing the list of effects to the 'effects' table in the database.
2021-02-03 15:20:45,228 DEBUG    [database_management.py:74] Database successfully populated with effects.
2021-02-03 15:20:45,228 DEBUG    [database_management.py:51] Since the effects weren't in store, the potions may not be as well. Populating it...
2021-02-03 15:20:45,524 DEBUG    [database_management.py:87] Writing ingredients to 'ingredients' table in the database.
2021-02-03 15:20:45,705 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,707 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,708 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,709 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,710 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,712 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,712 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,714 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,714 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,716 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,717 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,719 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,719 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,721 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,721 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,723 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,724 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,726 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,726 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,728 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,729 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,730 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,731 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,733 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,733 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,735 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,735 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,737 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,737 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,739 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,740 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,742 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,742 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,744 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,745 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,746 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,747 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,749 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,749 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,751 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,751 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,753 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,753 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,755 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,756 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,758 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,758 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,760 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,760 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,762 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,763 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,764 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,765 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,767 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,767 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,769 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,769 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,771 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,771 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,773 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,773 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,775 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,776 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,777 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,778 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,780 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,780 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,782 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,782 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,784 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,785 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,786 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,787 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,789 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,789 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,791 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,791 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,793 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,793 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,795 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,795 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,797 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,798 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,799 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,799 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,801 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,802 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,804 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,804 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,806 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,806 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,808 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,809 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,811 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,811 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,813 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,813 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,815 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,816 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,817 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,818 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,819 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,820 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,821 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,822 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,823 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,824 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,826 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,826 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,828 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,828 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,830 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,830 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,833 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,833 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,835 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,836 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,837 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,838 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,839 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,840 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,842 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,842 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,844 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,844 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,846 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,847 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,849 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,849 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,851 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,851 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,853 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,854 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,855 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,856 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,858 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,858 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,860 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,860 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,862 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,863 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,864 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,865 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,867 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,867 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,869 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,869 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,871 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,871 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,873 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,873 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,875 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,876 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,877 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,878 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,880 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,880 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,882 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,883 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,884 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,885 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,886 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,887 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,889 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,889 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,891 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,891 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,893 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,894 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,895 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,896 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,898 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,898 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,900 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,900 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,902 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,902 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,904 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,905 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,907 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,907 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,909 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,909 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,911 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,911 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,913 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,914 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,917 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,918 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,920 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,921 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,922 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,923 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,925 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,925 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,927 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,927 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,929 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,929 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,931 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,931 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,933 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,933 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,935 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,936 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,937 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,938 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,940 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,940 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,942 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,942 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,944 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,945 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,947 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,947 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,949 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,949 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,951 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,951 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,953 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,953 DEBUG    [database_management.py:92] Getting the 'id' for the effect from the 'effects' table.
2021-02-03 15:20:45,955 DEBUG    [database_management.py:97] Saving the 'id' for each effect, instead of the entire name.
2021-02-03 15:20:45,955 DEBUG    [database_management.py:99] Database successfully populated with ingredients.
2021-02-03 15:20:45,960 DEBUG    [database_management.py:60] Database successfully initialized.
